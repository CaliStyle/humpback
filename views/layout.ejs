<!--
    /****************************************************
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
     
    ||  || ||   || ||\  /|| ||\\ ||\\    /\    //\\ || //
    ||  || ||   || || \/ || ||// ||//   //\\  ||    ||//
    ||==|| ||   || ||    || ||   ||\\  /====\ ||    ||\\
    ||  ||  \\_//  ||    || ||   ||// //    \\ \\// || \\

    Authored By: 
    Scott Wyatt @ScottBWyatt 
    Built On: Humpback

    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
    ****************************************************/
-->
<!DOCTYPE html>
<html ng-app="humpback" ng-controller="AppCtrl">
  <head>
    <title>New Humpback App</title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

    <link type="text/plain" rel="author" href="/humans.txt" />   


    <% if (typeof sails.config.humpback.mode !== 'undefined' && sails.config.humpback.mode == 'development') { %>
        <script src="http://localhost:1338/livereload.js"></script>
    <% } %>
    <!--  
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage 
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.
        
        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:
            
            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <link rel="stylesheet" href="/styles/app.css">
    <!--STYLES END-->
  </head>

  <body>
    <%- body %>



    <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).
        
        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

    <!--TEMPLATES-->
    
    <!--TEMPLATES END-->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can 
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.
      
      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:
          
          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->

    <!--SCRIPTS-->
    <script src="/js/dependencies/sails.io.js"></script>
    <script src="/bower_components/fastclick/lib/fastclick.js"></script>
    <script src="/bower_components/viewport-units-buggyfill/viewport-units-buggyfill.js"></script>
    <script src="/bower_components/tether/tether.js"></script>
    <script src="/bower_components/hammerjs/hammer.js"></script>
    <script src="/bower_components/angular/angular.js"></script>
    <script src="/bower_components/js-data/dist/js-data.js"></script>
    <script src="/bower_components/js-data-angular/dist/js-data-angular.js"></script>
    <script src="/bower_components/angularSails/dist/ngsails.io.js"></script>
    <script src="/bower_components/angular-ui-router/release/angular-ui-router.js"></script>
    <script src="/bower_components/angular-animate/angular-animate.js"></script>
    <script src="/bower_components/foundation-apps/js/vendor/iconic.min.js"></script>
    <script src="/bower_components/foundation-apps/js/angular/services/foundation.core.animation.js"></script>
    <script src="/bower_components/foundation-apps/js/angular/services/foundation.core.js"></script>
    <script src="/bower_components/foundation-apps/js/angular/services/foundation.dynamicRouting.animations.js"></script>
    <script src="/bower_components/foundation-apps/js/angular/services/foundation.dynamicRouting.js"></script>
    <script src="/bower_components/foundation-apps/js/angular/services/foundation.mediaquery.js"></script>
    <script src="/bower_components/foundation-apps/js/angular/vendor/markdown.js"></script>
    <script src="/bower_components/foundation-apps/js/angular/vendor/svgDirs.js"></script>
    <script src="/bower_components/foundation-apps/js/angular/foundation.js"></script>
    <script src="/bower_components/foundation-apps/dist/js/foundation-apps.js"></script>
    <script src="/bower_components/foundation-apps/dist/js/foundation-apps-templates.js"></script>
    <script src="/app/app.js"></script>
    <script src="/app/controllers/UserController.js"></script>
    <script src="/app/controllers/index.js"></script>
    <script src="/app/hooks/index.js"></script>
    <script src="/app/models/User.js"></script>
    <script src="/app/models/index.js"></script>
    <script src="/app/policies/index.js"></script>
    <script src="/app/providers/js-data-angular-sailssocket.js"></script>
    <script src="/app/services/filters.js"></script>
    <script src="/app/services/index.js"></script>
    <script src="/app/views/index.js"></script>
    <!--SCRIPTS END-->
  </body>
</html>
